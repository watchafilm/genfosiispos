/**
 * @fileoverview Firestore Security Rules for SipSwift Drink Ordering App
 *
 * Core Philosophy:
 * This ruleset focuses on securing access to drink menu data and customer orders.
 * The drinks collection is publicly readable but only writable by admins (simulated by `false` for now).
 * The orders collection allows anyone to create orders, but updates and deletes are denied.
 *
 * Data Structure:
 * /drinks/{drinkId}: Stores drink menu items.
 * /orders/{orderId}: Stores customer order details.
 *
 * Key Security Decisions:
 * - Drink menu data is publicly readable.
 * - Order creation is allowed for all users (no authentication required), which might need further restrictions in a production environment.
 * - Order updates and deletes are explicitly denied for all users.
 *
 * Denormalization for Authorization:
 * Not applicable in this simplified scenario as no specific user roles or ownership is defined.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows public read access to drink menu items, with write access denied.
     * @path /drinks/{drinkId}
     * @allow get, list: Any user can read the drink menu.
     * @allow create, update, delete: No one can modify or delete drinks.
     * @deny create, update, delete: All write operations are denied.
     * @principle Public read access, restricted write access.
     */
    match /drinks/{drinkId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Allows anyone to create orders, but restricts updates and deletes.
     * @path /orders/{orderId}
     * @allow create: Any user can place an order.
     * @deny update, delete: No one can modify or delete orders.
     * @principle Open order creation, restricted modification.
     */
    match /orders/{orderId} {
      allow get, list: if true;
      allow create: if true;
      allow update, delete: if false;
    }
  }
}